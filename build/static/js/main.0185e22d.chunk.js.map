{"version":3,"sources":["localStorage.js","components/ContactForm/ContactForm.js","components/ContactFilter/ContactFilter.js","components/ContactList/ContactList.js","server/constants.js","components/App/App.js","index.js"],"names":["saveToLocalStorage","key","value","localStorage","setItem","JSON","stringify","err","Error","getLocalStorage","items","getItem","parse","ContactForm","onSave","useState","name","setName","nameId","useRef","shortid","generate","number","setNumber","numberId","onSubmit","evt","preventDefault","className","type","onChange","target","id","current","ContactFilter","ContactList","contacts","removeContact","map","contact","onClick","CONTACTS","Message","NOT_COMPLETE_DATA","REPETED_NAME","SUCCESSFULL","toast","configure","phoneBookReducer","state","payload","filter","ReactDOM","render","useReducer","dispatch","useEffect","setFilter","contactsFilter","useMemo","toLowerCase","includes","find","user","warn","success","error","e","document","getElementById"],"mappings":"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","file":"static/js/main.0185e22d.chunk.js","sourcesContent":["const saveToLocalStorage = (key, value) => {\n  try {\n    localStorage.setItem(key, JSON.stringify(value));\n  } catch (err) {\n    throw new Error();\n  }\n};\n\nconst getLocalStorage = key => {\n  try {\n    const items = localStorage.getItem(key);\n    return items ? JSON.parse(items) : null;\n  } catch (err) {\n    throw new Error();\n  }\n};\n\nexport default {\n  saveToLocalStorage,\n  getLocalStorage,\n};\n","/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React, { useState, useRef } from 'react';\nimport shortid from 'shortid';\nimport PropTypes from 'prop-types';\n\nexport default function ContactForm({ onSave }) {\n  const [name, setName] = useState('');\n  const nameId = useRef(shortid.generate());\n\n  const onChangeName = evt => {\n    setName(evt.target.value);\n  };\n\n  const [number, setNumber] = useState('');\n  const numberId = useRef(shortid.generate());\n  const onChangeNumber = evt => {\n    setNumber(evt.target.value);\n  };\n\n  const onSubmit = evt => {\n    onSave({ name, number });\n    evt.preventDefault();\n\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form onSubmit={onSubmit} className=\"Form\">\n      <label> Name:</label>\n      <input\n        type=\"text\"\n        name=\"name\"\n        value={name}\n        onChange={onChangeName}\n        id={nameId.current}\n      />\n      <label>Phone number: </label>\n\n      <input\n        type=\"text\"\n        name=\"number\"\n        value={number}\n        onChange={onChangeNumber}\n        id={numberId.current}\n      />\n      <button type=\"submit\" className=\"Form_button\">\n        Save contact\n      </button>\n    </form>\n  );\n}\n\nContactForm.propTypes = {\n  onSave: PropTypes.func.isRequired,\n};\n","/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ContactFilter = ({ value, onChange }) => (\n  <>\n    <label className=\"Label_filter\">Find contacts by name</label>\n    <input\n      type=\"text\"\n      value={value}\n      onChange={onChange}\n      className=\"Input_filter\"\n    />\n  </>\n);\n\nContactFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\nexport default ContactFilter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ContactList = ({ contacts, removeContact }) => (\n  <ul className=\"List\">\n    {contacts.map(contact => (\n      <li key={contact.id} className=\"List_item\">\n        <p>\n          <span>Name :</span> {contact.name}\n        </p>\n        <p className=\"List_number\">\n          <span>Number :</span> {contact.number}\n        </p>\n        <button\n          type=\"button\"\n          onClick={() => removeContact(contact.id)}\n          className=\"Button_contact\"\n        >\n          Delete\n        </button>\n      </li>\n    ))}\n  </ul>\n);\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string,\n      number: PropTypes.string,\n    }),\n  ).isRequired,\n\n  removeContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","export const CONTACTS = 'contacts';\n\nexport const Message = {\n  NOT_COMPLETE_DATA: 'Please, enter needed information!',\n  REPETED_NAME: 'This name already exists in your phonebook',\n  SUCCESSFULL: 'Success!',\n};\n","import React, { useState, useEffect, useReducer, useMemo } from 'react';\nimport shortid from 'shortid';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport localStorage from '../../localStorage';\nimport ContactForm from '../ContactForm';\nimport ContactFilter from '../ContactFilter';\nimport ContactList from '../ContactList';\n\nimport { Message, CONTACTS } from '../../server/constants';\n\ntoast.configure();\n\nconst phoneBookReducer = (state = [], { type, payload }) => {\n  switch (type) {\n    case 'ADD_CONTACT':\n      return [...state, payload.contact];\n\n    case 'REMOVE_CONTACT':\n      return state.filter(contact => contact.id !== payload.id);\n\n    case 'SET_ALL_CONTACTS':\n      return payload.contacts;\n\n    default:\n      return state;\n  }\n};\n\nexport default function App() {\n  const [contacts, dispatch] = useReducer(phoneBookReducer, []);\n\n  useEffect(() => {\n    // eslint-disable-next-line no-shadow\n    const contacts = localStorage.getLocalStorage(CONTACTS);\n    if (contacts) {\n      dispatch({\n        type: 'SET_ALL_CONTACTS',\n        payload: {\n          contacts,\n        },\n      });\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.saveToLocalStorage(CONTACTS, contacts);\n  }, [contacts]);\n\n  const addContact = ({ name, number }) => {\n    const contact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n    if (!contact.name || !contact.number) {\n      toast.error(Message.NOT_COMPLETE_DATA);\n      return;\n    }\n    const isNameUnique = contacts.find(user => user.name === contact.name);\n\n    if (isNameUnique) {\n      toast.warn(Message.REPETED_NAME);\n      return;\n    }\n\n    dispatch({\n      type: 'ADD_CONTACT',\n      payload: {\n        contact,\n      },\n    });\n    toast.success(Message.SUCCESSFULL);\n  };\n\n  const removeContact = id => {\n    dispatch({\n      type: 'REMOVE_CONTACT',\n      payload: {\n        id,\n      },\n    });\n  };\n\n  const [filter, setFilter] = useState('');\n\n  const onChangeFilter = e => setFilter(e.target.value);\n\n  const contactsFilter = useMemo(() => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  }, [contacts, filter]);\n\n  return (\n    <div className=\"App\">\n      <h1>Phonebook</h1>\n      <main>\n        <ContactForm onSave={addContact} />\n        <h2>Contacts</h2>\n        <ContactFilter value={filter} onChange={onChangeFilter} />\n        <ContactList contacts={contactsFilter} removeContact={removeContact} />\n      </main>\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}